<?xml version="1.0" encoding="UTF-8"?>
<project name="PHP Audit" default="build"  basedir=".">
    <taskdef name="ReadSemanticVersion" classname="\SetBased\Phing\Task\ReadSemanticVersionTask"/>
    <property name="VERSION" value="0.0.0"/>

    <target name="build"/>

    <!-- Run composer update and executes various other updates -->
    <target name="update">
        <exec executable="composer" checkreturn="true" passthru="true">
            <arg value="--ansi"/>
            <arg value="update"/>
        </exec>

        <phing phingfile="build.xml" target="outdated" haltonfailure="true"/>
    </target>

    <!-- Show outdated packages -->
    <target name="outdated">
        <exec executable="composer" checkreturn="false" passthru="true">
            <arg value="--ansi"/>
            <arg value="outdated"/>
            <arg value="--direct"/>
        </exec>
        <exec executable="npm" checkreturn="false" passthru="true">
            <arg value="--ansi"/>
            <arg value="outdated"/>
        </exec>
    </target>

    <!-- Generates the documentation -->
    <target name="docs">
        <exec command="make html" dir="docs" passthru="true" checkreturn="true"/>
    </target>

    <!-- Creates a new version/release. -->
    <target name="version">
        <readSemanticVersion file=".version"
                             versionProperty="VERSION"
                             haltOnError="true"/>
        <!-- Set version of application -->
        <reflexive>
            <fileset dir=".">
                <include name="src/Application/AuditApplication.php"/>
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="parent::__construct\('audit', .*"
                            replace="parent::__construct('audit', '${VERSION}');"/>
                </replaceregexp>
            </filterchain>
        </reflexive>
        <gitcommit repository="." message="Release: ${VERSION}" allFiles="true"/>
        <gitpush repository="."/>
        <gittag repository="." name="${VERSION}"/>
        <gitpush repository="." refspec="${VERSION}" quiet="false"/>
    </target>

    <!-- Runs all unit tests -->
    <target name="unit">
        <exec executable="bash" passthru="true" checkreturn="true">
            <arg value=".unit-test"/>
        </exec>
    </target>
</project>
